# Generated by Django 4.1.2 on 2022-10-17 11:25

import django.contrib.gis.db.models.fields
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Device",
            fields=[
                (
                    "device_id",
                    models.IntegerField(
                        help_text="Device ID", primary_key=True, serialize=False
                    ),
                ),
                (
                    "device_type",
                    models.CharField(
                        blank=True,
                        choices=[("mounted", "Mounted"), ("buoy", "Buoy")],
                        default="buoy",
                        max_length=50,
                    ),
                ),
                ("battery", models.FloatField(help_text="배터리 잔량", null=True)),
                (
                    "owner",
                    models.CharField(
                        default="ODN", help_text="스마트부표 소유자", max_length=200
                    ),
                ),
                (
                    "serial_number",
                    models.CharField(
                        default="SN-TRIPA-", help_text="멀티 프로브 제품번호", max_length=50
                    ),
                ),
                (
                    "first_run_time",
                    models.DateTimeField(auto_now_add=True, help_text="가동시작시간"),
                ),
                (
                    "operating_state",
                    models.BooleanField(default=True, help_text="가동상태"),
                ),
            ],
            options={
                "ordering": ["device_id"],
            },
        ),
        migrations.CreateModel(
            name="Ph",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "measured_time",
                    models.DateTimeField(auto_now_add=True, help_text="측정 시간"),
                ),
                (
                    "serial_number",
                    models.CharField(
                        default="SN-PPHRB-", help_text="센서 제품번호", max_length=50
                    ),
                ),
                ("temperature", models.FloatField(help_text="℃ 수온", null=True)),
                ("ph", models.FloatField(help_text="pH 수소이온농도", null=True)),
                ("redox", models.FloatField(help_text="mV 산화환원반응", null=True)),
                ("ph_meter", models.FloatField(help_text="mV 수소이온농도_미터", null=True)),
                (
                    "device",
                    models.ForeignKey(
                        db_column="device_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ph_sensor",
                        to="device.device",
                    ),
                ),
            ],
            options={
                "ordering": ["-measured_time"],
            },
        ),
        migrations.CreateModel(
            name="Oxygen",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "measured_time",
                    models.DateTimeField(auto_now_add=True, help_text="측정 시간"),
                ),
                (
                    "serial_number",
                    models.CharField(
                        default="SN-PODOC-", help_text="센서 제품번호", max_length=50
                    ),
                ),
                ("temperature", models.FloatField(help_text="℃ 수온", null=True)),
                ("oxygen_per", models.FloatField(help_text="% 용존산소", null=True)),
                ("oxygen_mpl", models.FloatField(help_text="mg/L 용존산소", null=True)),
                ("oxygen_ppm", models.FloatField(help_text="ppm 용존산소", null=True)),
                (
                    "device",
                    models.ForeignKey(
                        db_column="device_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="oxygen_sensor",
                        to="device.device",
                    ),
                ),
            ],
            options={
                "ordering": ["-measured_time"],
            },
        ),
        migrations.CreateModel(
            name="Location",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "measured_time",
                    models.DateTimeField(auto_now_add=True, help_text="측정 시간"),
                ),
                ("state", models.CharField(blank=True, max_length=200, null=True)),
                ("address", models.CharField(blank=True, max_length=200, null=True)),
                ("locality", models.CharField(blank=True, max_length=200, null=True)),
                (
                    "coordinate",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.FloatField(), blank=True, null=True, size=None
                    ),
                ),
                ("point", django.contrib.gis.db.models.fields.PointField(srid=4326)),
                (
                    "device",
                    models.ForeignKey(
                        db_column="device_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="location",
                        to="device.device",
                    ),
                ),
            ],
            options={
                "ordering": ["-measured_time"],
            },
        ),
        migrations.CreateModel(
            name="Conduct",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "measured_time",
                    models.DateTimeField(auto_now_add=True, help_text="측정 시간"),
                ),
                (
                    "serial_number",
                    models.CharField(
                        default="SN-PC4EB-", help_text="센서 제품번호", max_length=50
                    ),
                ),
                ("temperature", models.FloatField(help_text="℃ 수온", null=True)),
                ("conductivity", models.FloatField(help_text="μS/cm 전도도", null=True)),
                ("salinity", models.FloatField(help_text="ppt 염도", null=True)),
                ("tds", models.FloatField(help_text="ppm 용존 고용물", null=True)),
                (
                    "device",
                    models.ForeignKey(
                        db_column="device_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="conduct_sensor",
                        to="device.device",
                    ),
                ),
            ],
            options={
                "ordering": ["-measured_time"],
            },
        ),
        migrations.CreateModel(
            name="Chlorophyll",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "measured_time",
                    models.DateTimeField(auto_now_add=True, help_text="측정 시간"),
                ),
                (
                    "serial_number",
                    models.CharField(default="SN-", help_text="센서 제품번호", max_length=50),
                ),
                ("temperature", models.FloatField(help_text="℃ 수온", null=True)),
                ("chlorophyll", models.FloatField(help_text="ug/L", null=True)),
                (
                    "device",
                    models.ForeignKey(
                        db_column="device_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="chlorophyll_sensor",
                        to="device.device",
                    ),
                ),
            ],
            options={
                "ordering": ["-measured_time"],
            },
        ),
    ]
